buildscript {
    repositories {
        maven { url = "https://maven.fabricmc.net/" }
        mavenCentral()
    }
    dependencies {
        classpath "net.fabricmc:fabric-loom:${loom_version}"
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'fabric-loom'

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.fabricmc.net/'
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "gridbuildhelper" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(project.java_version as int)
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    inputs.property "archivesName", project.base.archivesName

    from("LICENSE") {
        rename { "${it}_${inputs.properties.archivesName}"}
    }
}

tasks {
    remapJar {
        archiveClassifier.set("fabric-dev")
    }

    jar {
        from sourceSets.main.output
        archiveClassifier.set("")
    }

    sourcesJar {
        from sourceSets.main.allSource
        archiveClassifier.set("sources")
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {

    }
}